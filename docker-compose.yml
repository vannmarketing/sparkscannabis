version: '3.8'

services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    image: sparks-cannabis-app:latest
    container_name: sparks-cannabis-app
    restart: unless-stopped
    depends_on:
      db:
        condition: service_healthy
    environment:
      APP_ENV: production
      APP_DEBUG: 'true'  # Set to true to get more detailed error messages
      APP_URL: ${APP_URL:-http://localhost:8080}
      APP_KEY: ${APP_KEY}
      
      # Database
      DB_CONNECTION: ${DB_CONNECTION:-mysql}
      DB_HOST: db  # Using the service name as the hostname
      DB_PORT: ${DB_PORT:-3306}
      DB_DATABASE: ${DB_DATABASE:-sparks_cannabis}
      DB_USERNAME: ${DB_USERNAME:-sparks}
      DB_PASSWORD: ${DB_PASSWORD:-password}
      
      # Session
      SESSION_DRIVER: ${SESSION_DRIVER:-database}
      SESSION_LIFETIME: ${SESSION_LIFETIME:-120}
      
      # Redis (if used)
      REDIS_HOST: ${REDIS_HOST:-redis}
      REDIS_PASSWORD: ${REDIS_PASSWORD:-null}
      REDIS_PORT: ${REDIS_PORT:-6379}
      
      # Mail
      MAIL_MAILER: ${MAIL_MAILER:-smtp}
      MAIL_HOST: ${MAIL_HOST:-mailhog}
      MAIL_PORT: ${MAIL_PORT:-1025}
      MAIL_USERNAME: ${MAIL_USERNAME:-null}
      MAIL_PASSWORD: ${MAIL_PASSWORD:-null}
      MAIL_ENCRYPTION: ${MAIL_ENCRYPTION:-null}
      MAIL_FROM_ADDRESS: ${MAIL_FROM_ADDRESS:-hello@example.com}
      MAIL_FROM_NAME: "${APP_NAME:-Laravel}"
    ports:
      - "8080:80"
    volumes:
      - ./:/var/www/html
      - /var/www/html/vendor
      - /var/www/html/node_modules
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Database service
  db:
    image: mysql:8.0
    container_name: sparks-cannabis-db
    restart: unless-stopped
    command: --default-authentication-plugin=mysql_native_password
    environment:
      - MYSQL_DATABASE=${DB_DATABASE:-sparks_cannabis}
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD:-rootpassword}
      - MYSQL_ALLOW_EMPTY_PASSWORD=no
    volumes:
      - dbdata:/var/lib/mysql
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      timeout: 5s
      retries: 10

  # Redis service (uncomment if using Redis)
  # redis:
  #   image: redis:alpine
  #   container_name: redis
  #   restart: unless-stopped
  #   networks:
  #     - app-network

  # MailHog for email testing (uncomment if needed)
  # mailhog:
  #   image: mailhog/mailhog
  #   container_name: mailhog
  #   ports:
  #     - "1025:1025" # SMTP server
  #     - "8025:8025" # Web UI
  #   networks:
  #     - app-network

networks:
  app-network:
    driver: bridge

volumes:
  dbdata:
    driver: local
